package com.cymobile.ymwork.server;

import android.content.Context;
import android.util.Log;
import com.amap.api.maps.AMap;
import com.cymobile.ymwork.server.error.ServerCredentialsException;
import com.cymobile.ymwork.server.error.ServerException;
import com.cymobile.ymwork.server.error.ServerParseException;
import com.cymobile.ymwork.types.Building;
import com.cymobile.ymwork.types.BuildingReport;
import com.cymobile.ymwork.types.CaseNumber;
import com.cymobile.ymwork.types.CommonResult;
import com.cymobile.ymwork.types.ConstrustionField;
import com.cymobile.ymwork.types.Group;
import com.cymobile.ymwork.types.Reply;
import com.cymobile.ymwork.types.ServerSettings;
import com.cymobile.ymwork.types.User;
import com.cymobile.ymwork.types.UserArea;
import com.cymobile.ymwork.types.VisitorvolumeReports;
import com.cymobile.ymwork.types.Zone;
import java.io.IOException;
import java.net.SocketTimeoutException;

public class Server
{
  public static final String API_DOMAIN = "203.86.54.62";
  public static final int API_PORT = 8080;
  private static final String ChaoyangBianjie = "116.576884921,40.0330134135;116.578190614,40.0311467820;116.578213591,40.0289055255;116.581916385,40.0250643705;116.585272525,40.0231997370;116.588129665,40.0216128255;116.592054237,40.0192811595;116.597530755,40.0160274165;116.600241541,40.0143051405;116.602342438,40.0136393070;116.604639139,40.0131812655;116.611906365,40.0126987485;116.615595172,40.0123166310;116.618921842,40.0119539940;116.621910351,40.0107561930;116.625510247,40.0087681830;116.627672583,40.0076842680;116.625620137,40.0051233315;116.627546709,40.0028556015;116.629567186,40.0019345235;116.632285465,40.0022487090;116.635331416,40.0036378185;116.637524221,40.0021253325;116.639146098,40.0002417180;116.641097145,39.9985094520;116.643199041,39.9944580075;116.643393846,39.9919180500;116.639838405,39.9901498200;116.639086657,39.9870724005;116.637096649,39.9874290435;116.634900348,39.9863126610;116.632809441,39.9859575165;116.633626623,39.9836817945;116.633300949,39.9815084700;116.635925821,39.9819130650;116.638867876,39.9823870905;116.640428314,39.9804819975;116.639848894,39.9777607215;116.639813929,39.9748346505;116.641368373,39.9690844065;116.642123617,39.9646643310;116.642477763,39.9596278725;116.642514726,39.9574035990;116.642429311,39.9534185880;116.643624115,39.9503032065;116.644527211,39.9475999125;116.641765476,39.9475369755;116.638697547,39.9490594515;116.635554193,39.9497672430;116.632186065,39.9504690405;116.630893359,39.9477652470;116.630249503,39.9454126020;116.631818433,39.9429385785;116.633229520,39.9405544650;116.631680071,39.9388007205;116.628885868,39.9369565665;116.630010742,39.9346653600;116.629557696,39.9324625650;116.627089167,39.9318321960;116.624928829,39.9320784495;116.624026233,39.9301244055;116.625586171,39.9281563755;116.627116639,39.9263711625;116.629471782,39.9237028335;116.630636616,39.9217547835;116.627106150,39.9221344035;116.624782476,39.9224865510;116.620975287,39.9231199170;116.621268993,39.9204965430;116.620025737,39.9182103315;116.622462298,39.9183991425;116.623095165,39.9138591870;116.621219542,39.9124186290;116.622398362,39.9094106400;116.620107156,39.9083417100;116.625199059,39.9082513005;116.623126134,39.9065834700;116.620849912,39.9066663870;116.621696065,39.9048422130;116.623788970,39.9043432125;116.621950810,39.9026793780;116.620750512,39.9010704885;116.619142621,39.8995265340;116.621137624,39.8989481130;116.619182581,39.8969705925;116.618516248,39.8967837795;116.616314452,39.8957782860;116.615789478,39.8896913790;116.620197565,39.8899676025;116.628055699,39.8904406290;116.628395859,39.8879326395;116.628787467,39.8850605145;116.629223530,39.8816988795;116.625840417,39.8813787000;116.624716542,39.8796344460;116.625021736,39.8775210615;116.622928332,39.8725855020;116.621435826,39.8708906985;116.620398364,39.8677318605;116.623066194,39.8677493430;116.623406853,39.8656139805;116.624332426,39.8633407560;116.626569187,39.8620670310;116.625311446,39.8591624385;116.623280479,39.8576489535;116.620085178,39.8553172875;116.617633132,39.8535605460;116.613384385,39.8504926170;116.610737035,39.8501704395;116.604876901,39.8503008090;116.604529749,39.8478232890;116.607091684,39.8466344790;116.605268010,39.8439251910;116.601781500,39.8410765425;116.601721560,39.8379681540;116.601632649,39.8340006255;116.601564217,39.8316200085;116.599252032,39.8316934350;116.599358925,39.8280405915;116.599483800,39.8242928430;116.598213571,39.8261884455;116.595418369,39.8260241100;116.591489802,39.8263572765;116.591886405,39.8238637725;116.588580714,39.8245460895;116.583891408,39.8250241110;116.587299996,39.8282723595;116.581954846,39.8279361960;116.577672133,39.8276694630;116.577378927,39.8305425870;116.572774036,39.8322169110;116.572477833,39.8350770480;116.569369444,39.8350121130;116.565326491,39.8336794470;116.562688632,39.8337448815;116.559381942,39.8342538720;116.557456869,39.8350111140;116.554354474,39.8348168085;116.552209621,39.8346809445;116.549063770,39.8344386870;116.546995840,39.8351269980;116.544318520,39.8345410845;116.543228112,39.8326000275;116.543050290,39.8302533765;116.540438904,39.8303053245;116.538096748,39.8316250035;116.534739609,39.8321824455;116.532348502,39.8312089200;116.535632215,39.8297149155;116.538326019,39.8283782535;116.535316032,39.8271005325;116.535068280,39.8248622730;116.531955396,39.8249516835;116.526560296,39.8268922410;116.526202155,39.8298857445;116.522101759,39.8298183120;116.520081282,39.8297853450;116.516571795,39.8297229075;116.514362506,39.8288857455;116.513732637,39.8254956390;116.511328044,39.8234342025;116.509775598,39.8220086295;116.505173704,39.8197763640;116.504581297,39.8173742685;116.498271613,39.8157638805;116.495077311,39.8162129310;116.495384004,39.8187658755;116.492418472,39.8185411005;116.489902990,39.8189466945;116.489667226,39.8164746690;116.486577819,39.8168308125;116.485427970,39.8149167285;116.481119283,39.8116295190;116.476237170,39.8101485015;116.472446464,39.8087359155;116.469099315,39.8140970490;116.466873043,39.8143712745;116.463253167,39.8143298160;116.461948972,39.8167294140;116.459735188,39.8183612805;116.457383542,39.8199991410;116.453748681,39.8226609765;116.450531901,39.8221539840;116.447889046,39.8215475910;116.444236203,39.8206859535;116.442717723,39.8239836525;116.442136305,39.8262853485;116.442057883,39.8283997320;116.440417525,39.8299556745;116.440046397,39.8276225100;116.435396551,39.8274157170;116.435269678,39.8303682615;116.431414537,39.8302204095;116.430439513,39.8322588690;116.429931522,39.8325310965;116.431552899,39.8345036220;116.432915035,39.8365151085;116.435364583,39.8384756460;116.436117330,39.8405860335;116.438011434,39.8412558630;116.439599344,39.8395740465;116.441541400,39.8405151045;116.442188253,39.8435220945;116.444112826,39.8442628530;116.446148788,39.8443317840;116.446171266,39.8466769365;116.448033901,39.8481934185;116.450400532,39.8486819295;116.451662269,39.8514281805;116.453790139,39.8511864225;116.456257170,39.8505540555;116.457965460,39.8491669440;116.460180243,39.8486139975;116.460877545,39.8507738355;116.463692227,39.8506619475;116.465218699,39.8527533540;116.467589326,39.8527278795;116.467648267,39.8551699350;116.466025891,39.8564746290;116.463636783,39.8560650390;116.460701721,39.8578952070;116.458298626,39.8594786220;116.455846081,39.8612148840;116.453119311,39.8598667335;116.451172759,39.8620505475;116.448431503,39.8632073895;116.446174762,39.8627093880;116.443482957,39.8645355600;116.442890550,39.8672928000;116.442971968,39.8693097810;116.444672266,39.8705425470;116.443537402,39.8726674200;116.444005933,39.8750060790;116.444952486,39.8771279550;116.445527410,39.8794376430;116.445108829,39.8815350435;116.444694744,39.8844910845;116.444268670,39.8875065660;116.444923515,39.8900290410;116.446926510,39.8908667025;116.449083850,39.8904760935;116.450152281,39.8932148520;116.447699236,39.8936484180;116.446920016,39.8959276365;116.446677259,39.8980180440;116.445818119,39.9000045555;116.447825110,39.9010784805;116.450377056,39.9032737830;116.446695241,39.9031429140;116.443912027,39.9031549020;116.441276665,39.9029086485;116.438834110,39.9025784790;116.436784162,39.9024241335;116.436335611,39.9046573980;116.436463983,39.9069376155;116.436464482,39.9097542960;116.435597350,39.9122408070;116.435105343,39.9148561890;116.435001946,39.9173422005;116.434888060,39.9197807595;116.434799649,39.9219390990;116.434844604,39.9249066285;116.434544904,39.9276224100;116.436608338,39.9285025290;116.438916528,39.9293921385;116.440963479,39.9286229085;116.443238202,39.9285859455;116.443658281,39.9317507775;116.443693746,39.9343541715;116.443717722,39.9370804425;116.444483955,39.9391004205;116.444483455,39.9413301885;116.446518418,39.9431438730;116.447616819,39.9450764385;116.445827610,39.9461358780;116.443628311,39.9461418720;116.441921520,39.9450050100;116.439371572,39.9459375765;116.441033908,39.9482652465;116.439200743,39.9493446660;116.439254190,39.9514645440;116.437063882,39.9521383695;116.434875573,39.9520769310;116.436114832,39.9497577525;116.433937512,39.9497527575;116.431613838,39.9501198900;116.429370583,39.9509870220;116.429249205,39.9536123940;116.429007946,39.9564140895;116.430481971,39.9582537480;116.428364590,39.9594745260;116.425539918,39.9594260745;116.424798160,39.9621268710;116.421320641,39.9620814165;116.417834131,39.9620114865;116.413982986,39.9619470510;116.412433038,39.9638026935;116.411180292,39.9659810130;116.411184787,39.9686678235;116.411121351,39.9713161725;116.408611863,39.9713011875;116.407521454,39.9714690195;116.407340136,39.9691098810;116.407594881,39.9668906025;116.407731744,39.9645584370;116.407783192,39.9622032945;116.405464513,39.9617902080;116.403095385,39.9617567415;116.399963520,39.9622747230;116.397954031,39.9627257715;116.394549939,39.9632047920;116.392207284,39.9631388580;116.389997496,39.9630854115;116.389106388,39.9635749215;116.388506488,39.9655194750;116.390154339,39.9667497435;116.391270222,39.9684535380;116.393380609,39.9685099815;116.394490998,39.9703686210;116.394380608,39.9730679190;116.391795196,39.9730079790;116.389218775,39.9729964905;116.386805691,39.9728871000;116.384751247,39.9727337535;116.381506495,39.9726858015;116.381592909,39.9752911935;116.381653348,39.9774010815;116.381076925,39.9797707095;116.380392610,39.9821842935;116.379621882,39.9848775975;116.378896608,39.9873531195;116.378149855,39.9899899800;116.377380625,39.9923296380;116.376242265,39.9941538120;116.374508500,39.9958251390;116.372644366,39.9970309320;116.370982030,39.9984624990;116.369634879,40.0000579020;116.369585928,40.0023156420;116.367954561,40.0045549005;116.366462554,40.0065973560;116.364382636,40.0094330175;116.363009011,40.0112961525;116.361089433,40.0138955505;116.359085938,40.0164919515;116.357000026,40.0192182225;116.354671357,40.0222436940;116.354864164,40.0242746610;116.352128902,40.0255124220;116.354343685,40.0273680645;116.356812214,40.0277391930;116.359012012,40.0280259060;116.361818703,40.0282302015;116.364421098,40.0284684630;116.367412603,40.0290583725;116.371228783,40.0297936365;116.375168839,40.0305718575;116.377894611,40.0310773515;116.380345657,40.0312736550;116.382713287,40.0314180105;116.384829669,40.0315284000;116.387346150,40.0316622660;116.389621372,40.0318016265;116.392976514,40.0322286990;116.394483505,40.0336447815;116.392770720,40.0352421825;116.390828164,40.0362821415;116.390392600,40.0383735480;116.390884608,40.0405298895;116.392663827,40.0416297885;116.394085903,40.0399200000;116.394394594,40.0379170050;116.396143344,40.0367147085;116.398437048,40.0373715510;116.401161820,40.0379854365;116.403469510,40.0385838375;116.405889088,40.0394274930;116.407462513,40.0410134055;116.409256717,40.0427132040;116.407914061,40.0451577570;116.407681294,40.0491737370;116.409452022,40.0508100990;116.408849125,40.0536177885;116.409983989,40.0556147895;116.412666804,40.0558445595;116.415561406,40.0559179860;116.417919546,40.0568685345;116.420603359,40.0581197820;116.424561397,40.0595653350;116.427287668,40.0625368605;116.429805648,40.0618365615;116.433412537,40.0620918060;116.437472973,40.0617646335;116.442742698,40.0610743245;116.447156280,40.0588715295;116.449157277,40.0585588425;116.451347584,40.0585513500;116.451017914,40.0610898090;116.453780649,40.0616892090;116.455665262,40.0608994995;116.457733192,40.0606102890;116.459648275,40.0624509465;116.461390032,40.0634964000;116.461158264,40.0663270665;116.459824599,40.0693390515;116.458367557,40.0723640235;116.458444980,40.0758015825;116.460913009,40.0760912925;116.461528893,40.0785058755;116.462686234,40.0810428360;116.465066352,40.0817576205;116.465553364,40.0846087665;116.467327588,40.0866677055;116.466693223,40.0900068630;116.469249664,40.0899374325;116.471453958,40.0873135590;116.473466943,40.0853005740;116.475633274,40.0849184565;116.479004400,40.0846926825;116.481089812,40.0841142615;116.483060340,40.0833155610;116.486085312,40.0817041740;116.490195697,40.0806562230;116.494907481,40.0803515280;116.499313071,40.0801187610;116.503314066,40.0771077750;116.506527349,40.0746552300;116.509195678,40.0726182690;116.511513858,40.0711132755;116.514964903,40.0706792100;116.519489874,40.0711367520;116.522944416,40.0714983900;116.526740616,40.0710942945;116.529827526,40.0700003895;116.531929422,40.0688435475;116.534507841,40.0668460470;116.537230116,40.0635728235;116.540272071,40.0611937050;116.542397443,40.0599024975;116.545622715,40.0608030960;116.547481354,40.0622926050;116.547002833,40.0596682320;116.551121211,40.0596742260;116.552011320,40.0567981050;116.552408922,40.0540423635;116.550092241,40.0531797270;116.545500337,40.0498645455;116.547775060,40.0473820305;116.550755077,40.0452631515;116.553313017,40.0444489665;116.556394432,40.0431847320;116.561103219,40.0412876310;116.563020799,40.0400718480;116.565171147,40.0387202010;116.567379436,40.0370094135;116.569488825,40.0341337920;116.572469841,40.0329734535;116.575459348,40.0304879415;116.577608197,40.0292591715;116.575642165,40.0314225060;116.573729580,40.0326497775;116.576884921,40.0330134135;116.590591201,40.0434189975;116.589777016,40.0442691465;116.590286506,40.0452391755;116.590214578,40.0468690440;116.591220571,40.0470728400;116.590982809,40.0482012105;116.589476817,40.0477481640;116.589814978,40.0487022090;116.590907884,40.0490039070;116.590818973,40.0500283815;116.591082709,40.0509984105;116.590007286,40.0506797295;116.589209085,40.0497666435;116.588213581,40.0491437670;116.587268028,40.0486317795;116.586387909,40.0496617485;116.587333462,40.0505288805;116.588045250,40.0513705380;116.588794999,40.0525413660;116.589308485,40.0538175885;116.589559234,40.0549239810;116.589587706,40.0559794245;116.589543250,40.0571842185;116.589354439,40.0584229785;116.589165628,40.0596507495;116.588089206,40.0595168835;116.588382912,40.0605388605;116.588558736,40.0615908075;116.588353941,40.0628160810;116.588087208,40.0644499455;116.587841454,40.0660048890;116.587590205,40.0675113810;116.587318977,40.0691772135;116.587083213,40.0706507385;116.586857938,40.0720103775;116.586622174,40.0734729135;116.586871425,40.0744799055;116.585396401,40.0741966890;116.583703096,40.0740303555;116.582128672,40.0738855005;116.581027774,40.0737846015;116.581184118,40.0727895975;116.580956845,40.0716936945;116.581154647,40.0704794100;116.580899403,40.0691712195;116.579760043,40.0697471430;116.579563740,40.0710378510;116.579366437,40.0722816060;116.578107697,40.0747711140;116.577719086,40.0771991835;116.577434371,40.0789903905;116.577139167,40.0808410380;116.576773033,40.0830992775;116.576340466,40.0857925815;116.575655152,40.0903060635;116.575308999,40.0924818855;116.574462846,40.0975118505;116.573307502,40.1047181370;116.574028281,40.1059294245;116.573796513,40.1074069455;116.574288520,40.1085572940;116.575226581,40.1079404115;116.575431376,40.1066452080;116.575624183,40.1054244300;116.576213094,40.1042371185;116.577234571,40.1043255300;116.577428377,40.1031537030;116.581257544,40.1033569995;116.582136165,40.0978055565;116.580154648,40.0976122500;116.578786018,40.0974848775;116.579553750,40.0926522150;116.580072730,40.0893675030;116.580324478,40.0883869845;116.593042747,40.0895623080;116.595456831,40.0901911785;116.595295992,40.0912071615;116.595153135,40.0931991675;116.598321463,40.0935038625;116.597440845,40.0992181425;116.600245038,40.0994918685;116.601144138,40.0937526135;116.602533247,40.0938719940;116.603268012,40.0891946760;116.603469810,40.0879069650;116.604321957,40.0872626100;116.603080200,40.0867676055;116.603666113,40.0830278490;116.603965314,40.0811152635;116.604438840,40.0780877940;116.604870408,40.0754064780;116.605148629,40.0736232630;116.605503774,40.0714234650;116.605823953,40.0693090815;116.605962814,40.0680718200;116.606310966,40.0658510430;116.606589687,40.0641547410;116.606833443,40.0625118855;116.607021255,40.0613440545;116.607320455,40.0599014985;116.607692083,40.0575203820;116.607942832,40.0559529510;116.608049725,40.0548255795;116.607499776,40.0536142920;116.606756520,40.0525173900;116.605706071,40.0530638430;116.604159619,40.0529634435;116.602950330,40.0528455615;116.601445836,40.0527032040;116.600562220,40.0521852225;116.599461822,40.0515108975;116.600070213,40.0505423670;116.600741041,40.0494739365;116.601432349,40.0485378735;116.602477303,40.0476262860;116.603370409,40.0471108020;116.604701577,40.0466003130;116.605105672,40.0450878270;116.605281496,40.0439519640;116.605465312,40.0428475695;116.605607170,40.0417761420;116.605134144,40.0404579615;116.604452826,40.0396362840;116.602825954,40.0401872325;116.601792489,40.0405943250;116.600534248,40.0411692495;116.599308975,40.0416612570;116.598313471,40.0420913265;116.596979806,40.0425798375;116.595882405,40.0428845325;116.594355933,40.0433076090;116.593117672,40.0432726440;116.591806984,40.0431682485;116.590591201,40.0434189975;116.576884921,40.0330134135;";
  public static final String TAG = "Server";
  public String CenterPoint = "";
  private AMap aMap;
  private String mPassword;
  private String mPhone;
  private ServerHttpApiV2 mServerV2;

  public Server(ServerHttpApiV2 paramServerHttpApiV2)
  {
    this.mServerV2 = paramServerHttpApiV2;
  }

  public static final ServerHttpApiV2 createHttpApi(String paramString1, String paramString2, boolean paramBoolean, int paramInt)
  {
    Log.i("Server", "Using 203.86.54.62 for requests.");
    return new ServerHttpApiV2(paramString1, paramString2, paramBoolean, paramInt);
  }

  public static final ServerHttpApiV2 createHttpApi(String paramString, boolean paramBoolean)
  {
    return createHttpApi("203.86.54.62", paramString, paramBoolean, 8080);
  }

  public BuildingReport ConstrustionFieldReport1(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.ConstrustionFieldReport1(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public BuildingReport ConstrustionFieldReport2(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.ConstrustionFieldReport2(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public BuildingReport ConstrustionFieldReport4(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.ConstrustionFieldReport4(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public Group<ConstrustionField> Extra18(Context paramContext, int paramInt1, String paramString1, int paramInt2, String paramString2, String paramString3, int paramInt3, int paramInt4, Location paramLocation, String paramString4, String paramString5)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.Extra18(paramContext, paramInt1, paramString1, paramInt2, paramString2, paramString3, paramInt3, paramInt4, paramLocation, paramString4, paramString5);
  }

  public BuildingReport FireReport(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3, int paramInt3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.FireReport(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3, paramInt3);
  }

  public BuildingReport FireReport2(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3, int paramInt3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.FireReport2(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3, paramInt3);
  }

  public BuildingReport FireReport3(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.FireReport3(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public BuildingReport FireReport4(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.FireReport4(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public BuildingReport PublicReport(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.PublicReport(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public BuildingReport PublicReport2(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.PublicReport2(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public UserArea UserAreas(Context paramContext, String paramString1, String paramString2)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    if ((paramString2 != null) && (paramString2.length() == 6))
    {
      UserArea localUserArea = new UserArea();
      localUserArea.setBIANJIE("116.576884921,40.0330134135;116.578190614,40.0311467820;116.578213591,40.0289055255;116.581916385,40.0250643705;116.585272525,40.0231997370;116.588129665,40.0216128255;116.592054237,40.0192811595;116.597530755,40.0160274165;116.600241541,40.0143051405;116.602342438,40.0136393070;116.604639139,40.0131812655;116.611906365,40.0126987485;116.615595172,40.0123166310;116.618921842,40.0119539940;116.621910351,40.0107561930;116.625510247,40.0087681830;116.627672583,40.0076842680;116.625620137,40.0051233315;116.627546709,40.0028556015;116.629567186,40.0019345235;116.632285465,40.0022487090;116.635331416,40.0036378185;116.637524221,40.0021253325;116.639146098,40.0002417180;116.641097145,39.9985094520;116.643199041,39.9944580075;116.643393846,39.9919180500;116.639838405,39.9901498200;116.639086657,39.9870724005;116.637096649,39.9874290435;116.634900348,39.9863126610;116.632809441,39.9859575165;116.633626623,39.9836817945;116.633300949,39.9815084700;116.635925821,39.9819130650;116.638867876,39.9823870905;116.640428314,39.9804819975;116.639848894,39.9777607215;116.639813929,39.9748346505;116.641368373,39.9690844065;116.642123617,39.9646643310;116.642477763,39.9596278725;116.642514726,39.9574035990;116.642429311,39.9534185880;116.643624115,39.9503032065;116.644527211,39.9475999125;116.641765476,39.9475369755;116.638697547,39.9490594515;116.635554193,39.9497672430;116.632186065,39.9504690405;116.630893359,39.9477652470;116.630249503,39.9454126020;116.631818433,39.9429385785;116.633229520,39.9405544650;116.631680071,39.9388007205;116.628885868,39.9369565665;116.630010742,39.9346653600;116.629557696,39.9324625650;116.627089167,39.9318321960;116.624928829,39.9320784495;116.624026233,39.9301244055;116.625586171,39.9281563755;116.627116639,39.9263711625;116.629471782,39.9237028335;116.630636616,39.9217547835;116.627106150,39.9221344035;116.624782476,39.9224865510;116.620975287,39.9231199170;116.621268993,39.9204965430;116.620025737,39.9182103315;116.622462298,39.9183991425;116.623095165,39.9138591870;116.621219542,39.9124186290;116.622398362,39.9094106400;116.620107156,39.9083417100;116.625199059,39.9082513005;116.623126134,39.9065834700;116.620849912,39.9066663870;116.621696065,39.9048422130;116.623788970,39.9043432125;116.621950810,39.9026793780;116.620750512,39.9010704885;116.619142621,39.8995265340;116.621137624,39.8989481130;116.619182581,39.8969705925;116.618516248,39.8967837795;116.616314452,39.8957782860;116.615789478,39.8896913790;116.620197565,39.8899676025;116.628055699,39.8904406290;116.628395859,39.8879326395;116.628787467,39.8850605145;116.629223530,39.8816988795;116.625840417,39.8813787000;116.624716542,39.8796344460;116.625021736,39.8775210615;116.622928332,39.8725855020;116.621435826,39.8708906985;116.620398364,39.8677318605;116.623066194,39.8677493430;116.623406853,39.8656139805;116.624332426,39.8633407560;116.626569187,39.8620670310;116.625311446,39.8591624385;116.623280479,39.8576489535;116.620085178,39.8553172875;116.617633132,39.8535605460;116.613384385,39.8504926170;116.610737035,39.8501704395;116.604876901,39.8503008090;116.604529749,39.8478232890;116.607091684,39.8466344790;116.605268010,39.8439251910;116.601781500,39.8410765425;116.601721560,39.8379681540;116.601632649,39.8340006255;116.601564217,39.8316200085;116.599252032,39.8316934350;116.599358925,39.8280405915;116.599483800,39.8242928430;116.598213571,39.8261884455;116.595418369,39.8260241100;116.591489802,39.8263572765;116.591886405,39.8238637725;116.588580714,39.8245460895;116.583891408,39.8250241110;116.587299996,39.8282723595;116.581954846,39.8279361960;116.577672133,39.8276694630;116.577378927,39.8305425870;116.572774036,39.8322169110;116.572477833,39.8350770480;116.569369444,39.8350121130;116.565326491,39.8336794470;116.562688632,39.8337448815;116.559381942,39.8342538720;116.557456869,39.8350111140;116.554354474,39.8348168085;116.552209621,39.8346809445;116.549063770,39.8344386870;116.546995840,39.8351269980;116.544318520,39.8345410845;116.543228112,39.8326000275;116.543050290,39.8302533765;116.540438904,39.8303053245;116.538096748,39.8316250035;116.534739609,39.8321824455;116.532348502,39.8312089200;116.535632215,39.8297149155;116.538326019,39.8283782535;116.535316032,39.8271005325;116.535068280,39.8248622730;116.531955396,39.8249516835;116.526560296,39.8268922410;116.526202155,39.8298857445;116.522101759,39.8298183120;116.520081282,39.8297853450;116.516571795,39.8297229075;116.514362506,39.8288857455;116.513732637,39.8254956390;116.511328044,39.8234342025;116.509775598,39.8220086295;116.505173704,39.8197763640;116.504581297,39.8173742685;116.498271613,39.8157638805;116.495077311,39.8162129310;116.495384004,39.8187658755;116.492418472,39.8185411005;116.489902990,39.8189466945;116.489667226,39.8164746690;116.486577819,39.8168308125;116.485427970,39.8149167285;116.481119283,39.8116295190;116.476237170,39.8101485015;116.472446464,39.8087359155;116.469099315,39.8140970490;116.466873043,39.8143712745;116.463253167,39.8143298160;116.461948972,39.8167294140;116.459735188,39.8183612805;116.457383542,39.8199991410;116.453748681,39.8226609765;116.450531901,39.8221539840;116.447889046,39.8215475910;116.444236203,39.8206859535;116.442717723,39.8239836525;116.442136305,39.8262853485;116.442057883,39.8283997320;116.440417525,39.8299556745;116.440046397,39.8276225100;116.435396551,39.8274157170;116.435269678,39.8303682615;116.431414537,39.8302204095;116.430439513,39.8322588690;116.429931522,39.8325310965;116.431552899,39.8345036220;116.432915035,39.8365151085;116.435364583,39.8384756460;116.436117330,39.8405860335;116.438011434,39.8412558630;116.439599344,39.8395740465;116.441541400,39.8405151045;116.442188253,39.8435220945;116.444112826,39.8442628530;116.446148788,39.8443317840;116.446171266,39.8466769365;116.448033901,39.8481934185;116.450400532,39.8486819295;116.451662269,39.8514281805;116.453790139,39.8511864225;116.456257170,39.8505540555;116.457965460,39.8491669440;116.460180243,39.8486139975;116.460877545,39.8507738355;116.463692227,39.8506619475;116.465218699,39.8527533540;116.467589326,39.8527278795;116.467648267,39.8551699350;116.466025891,39.8564746290;116.463636783,39.8560650390;116.460701721,39.8578952070;116.458298626,39.8594786220;116.455846081,39.8612148840;116.453119311,39.8598667335;116.451172759,39.8620505475;116.448431503,39.8632073895;116.446174762,39.8627093880;116.443482957,39.8645355600;116.442890550,39.8672928000;116.442971968,39.8693097810;116.444672266,39.8705425470;116.443537402,39.8726674200;116.444005933,39.8750060790;116.444952486,39.8771279550;116.445527410,39.8794376430;116.445108829,39.8815350435;116.444694744,39.8844910845;116.444268670,39.8875065660;116.444923515,39.8900290410;116.446926510,39.8908667025;116.449083850,39.8904760935;116.450152281,39.8932148520;116.447699236,39.8936484180;116.446920016,39.8959276365;116.446677259,39.8980180440;116.445818119,39.9000045555;116.447825110,39.9010784805;116.450377056,39.9032737830;116.446695241,39.9031429140;116.443912027,39.9031549020;116.441276665,39.9029086485;116.438834110,39.9025784790;116.436784162,39.9024241335;116.436335611,39.9046573980;116.436463983,39.9069376155;116.436464482,39.9097542960;116.435597350,39.9122408070;116.435105343,39.9148561890;116.435001946,39.9173422005;116.434888060,39.9197807595;116.434799649,39.9219390990;116.434844604,39.9249066285;116.434544904,39.9276224100;116.436608338,39.9285025290;116.438916528,39.9293921385;116.440963479,39.9286229085;116.443238202,39.9285859455;116.443658281,39.9317507775;116.443693746,39.9343541715;116.443717722,39.9370804425;116.444483955,39.9391004205;116.444483455,39.9413301885;116.446518418,39.9431438730;116.447616819,39.9450764385;116.445827610,39.9461358780;116.443628311,39.9461418720;116.441921520,39.9450050100;116.439371572,39.9459375765;116.441033908,39.9482652465;116.439200743,39.9493446660;116.439254190,39.9514645440;116.437063882,39.9521383695;116.434875573,39.9520769310;116.436114832,39.9497577525;116.433937512,39.9497527575;116.431613838,39.9501198900;116.429370583,39.9509870220;116.429249205,39.9536123940;116.429007946,39.9564140895;116.430481971,39.9582537480;116.428364590,39.9594745260;116.425539918,39.9594260745;116.424798160,39.9621268710;116.421320641,39.9620814165;116.417834131,39.9620114865;116.413982986,39.9619470510;116.412433038,39.9638026935;116.411180292,39.9659810130;116.411184787,39.9686678235;116.411121351,39.9713161725;116.408611863,39.9713011875;116.407521454,39.9714690195;116.407340136,39.9691098810;116.407594881,39.9668906025;116.407731744,39.9645584370;116.407783192,39.9622032945;116.405464513,39.9617902080;116.403095385,39.9617567415;116.399963520,39.9622747230;116.397954031,39.9627257715;116.394549939,39.9632047920;116.392207284,39.9631388580;116.389997496,39.9630854115;116.389106388,39.9635749215;116.388506488,39.9655194750;116.390154339,39.9667497435;116.391270222,39.9684535380;116.393380609,39.9685099815;116.394490998,39.9703686210;116.394380608,39.9730679190;116.391795196,39.9730079790;116.389218775,39.9729964905;116.386805691,39.9728871000;116.384751247,39.9727337535;116.381506495,39.9726858015;116.381592909,39.9752911935;116.381653348,39.9774010815;116.381076925,39.9797707095;116.380392610,39.9821842935;116.379621882,39.9848775975;116.378896608,39.9873531195;116.378149855,39.9899899800;116.377380625,39.9923296380;116.376242265,39.9941538120;116.374508500,39.9958251390;116.372644366,39.9970309320;116.370982030,39.9984624990;116.369634879,40.0000579020;116.369585928,40.0023156420;116.367954561,40.0045549005;116.366462554,40.0065973560;116.364382636,40.0094330175;116.363009011,40.0112961525;116.361089433,40.0138955505;116.359085938,40.0164919515;116.357000026,40.0192182225;116.354671357,40.0222436940;116.354864164,40.0242746610;116.352128902,40.0255124220;116.354343685,40.0273680645;116.356812214,40.0277391930;116.359012012,40.0280259060;116.361818703,40.0282302015;116.364421098,40.0284684630;116.367412603,40.0290583725;116.371228783,40.0297936365;116.375168839,40.0305718575;116.377894611,40.0310773515;116.380345657,40.0312736550;116.382713287,40.0314180105;116.384829669,40.0315284000;116.387346150,40.0316622660;116.389621372,40.0318016265;116.392976514,40.0322286990;116.394483505,40.0336447815;116.392770720,40.0352421825;116.390828164,40.0362821415;116.390392600,40.0383735480;116.390884608,40.0405298895;116.392663827,40.0416297885;116.394085903,40.0399200000;116.394394594,40.0379170050;116.396143344,40.0367147085;116.398437048,40.0373715510;116.401161820,40.0379854365;116.403469510,40.0385838375;116.405889088,40.0394274930;116.407462513,40.0410134055;116.409256717,40.0427132040;116.407914061,40.0451577570;116.407681294,40.0491737370;116.409452022,40.0508100990;116.408849125,40.0536177885;116.409983989,40.0556147895;116.412666804,40.0558445595;116.415561406,40.0559179860;116.417919546,40.0568685345;116.420603359,40.0581197820;116.424561397,40.0595653350;116.427287668,40.0625368605;116.429805648,40.0618365615;116.433412537,40.0620918060;116.437472973,40.0617646335;116.442742698,40.0610743245;116.447156280,40.0588715295;116.449157277,40.0585588425;116.451347584,40.0585513500;116.451017914,40.0610898090;116.453780649,40.0616892090;116.455665262,40.0608994995;116.457733192,40.0606102890;116.459648275,40.0624509465;116.461390032,40.0634964000;116.461158264,40.0663270665;116.459824599,40.0693390515;116.458367557,40.0723640235;116.458444980,40.0758015825;116.460913009,40.0760912925;116.461528893,40.0785058755;116.462686234,40.0810428360;116.465066352,40.0817576205;116.465553364,40.0846087665;116.467327588,40.0866677055;116.466693223,40.0900068630;116.469249664,40.0899374325;116.471453958,40.0873135590;116.473466943,40.0853005740;116.475633274,40.0849184565;116.479004400,40.0846926825;116.481089812,40.0841142615;116.483060340,40.0833155610;116.486085312,40.0817041740;116.490195697,40.0806562230;116.494907481,40.0803515280;116.499313071,40.0801187610;116.503314066,40.0771077750;116.506527349,40.0746552300;116.509195678,40.0726182690;116.511513858,40.0711132755;116.514964903,40.0706792100;116.519489874,40.0711367520;116.522944416,40.0714983900;116.526740616,40.0710942945;116.529827526,40.0700003895;116.531929422,40.0688435475;116.534507841,40.0668460470;116.537230116,40.0635728235;116.540272071,40.0611937050;116.542397443,40.0599024975;116.545622715,40.0608030960;116.547481354,40.0622926050;116.547002833,40.0596682320;116.551121211,40.0596742260;116.552011320,40.0567981050;116.552408922,40.0540423635;116.550092241,40.0531797270;116.545500337,40.0498645455;116.547775060,40.0473820305;116.550755077,40.0452631515;116.553313017,40.0444489665;116.556394432,40.0431847320;116.561103219,40.0412876310;116.563020799,40.0400718480;116.565171147,40.0387202010;116.567379436,40.0370094135;116.569488825,40.0341337920;116.572469841,40.0329734535;116.575459348,40.0304879415;116.577608197,40.0292591715;116.575642165,40.0314225060;116.573729580,40.0326497775;116.576884921,40.0330134135;116.590591201,40.0434189975;116.589777016,40.0442691465;116.590286506,40.0452391755;116.590214578,40.0468690440;116.591220571,40.0470728400;116.590982809,40.0482012105;116.589476817,40.0477481640;116.589814978,40.0487022090;116.590907884,40.0490039070;116.590818973,40.0500283815;116.591082709,40.0509984105;116.590007286,40.0506797295;116.589209085,40.0497666435;116.588213581,40.0491437670;116.587268028,40.0486317795;116.586387909,40.0496617485;116.587333462,40.0505288805;116.588045250,40.0513705380;116.588794999,40.0525413660;116.589308485,40.0538175885;116.589559234,40.0549239810;116.589587706,40.0559794245;116.589543250,40.0571842185;116.589354439,40.0584229785;116.589165628,40.0596507495;116.588089206,40.0595168835;116.588382912,40.0605388605;116.588558736,40.0615908075;116.588353941,40.0628160810;116.588087208,40.0644499455;116.587841454,40.0660048890;116.587590205,40.0675113810;116.587318977,40.0691772135;116.587083213,40.0706507385;116.586857938,40.0720103775;116.586622174,40.0734729135;116.586871425,40.0744799055;116.585396401,40.0741966890;116.583703096,40.0740303555;116.582128672,40.0738855005;116.581027774,40.0737846015;116.581184118,40.0727895975;116.580956845,40.0716936945;116.581154647,40.0704794100;116.580899403,40.0691712195;116.579760043,40.0697471430;116.579563740,40.0710378510;116.579366437,40.0722816060;116.578107697,40.0747711140;116.577719086,40.0771991835;116.577434371,40.0789903905;116.577139167,40.0808410380;116.576773033,40.0830992775;116.576340466,40.0857925815;116.575655152,40.0903060635;116.575308999,40.0924818855;116.574462846,40.0975118505;116.573307502,40.1047181370;116.574028281,40.1059294245;116.573796513,40.1074069455;116.574288520,40.1085572940;116.575226581,40.1079404115;116.575431376,40.1066452080;116.575624183,40.1054244300;116.576213094,40.1042371185;116.577234571,40.1043255300;116.577428377,40.1031537030;116.581257544,40.1033569995;116.582136165,40.0978055565;116.580154648,40.0976122500;116.578786018,40.0974848775;116.579553750,40.0926522150;116.580072730,40.0893675030;116.580324478,40.0883869845;116.593042747,40.0895623080;116.595456831,40.0901911785;116.595295992,40.0912071615;116.595153135,40.0931991675;116.598321463,40.0935038625;116.597440845,40.0992181425;116.600245038,40.0994918685;116.601144138,40.0937526135;116.602533247,40.0938719940;116.603268012,40.0891946760;116.603469810,40.0879069650;116.604321957,40.0872626100;116.603080200,40.0867676055;116.603666113,40.0830278490;116.603965314,40.0811152635;116.604438840,40.0780877940;116.604870408,40.0754064780;116.605148629,40.0736232630;116.605503774,40.0714234650;116.605823953,40.0693090815;116.605962814,40.0680718200;116.606310966,40.0658510430;116.606589687,40.0641547410;116.606833443,40.0625118855;116.607021255,40.0613440545;116.607320455,40.0599014985;116.607692083,40.0575203820;116.607942832,40.0559529510;116.608049725,40.0548255795;116.607499776,40.0536142920;116.606756520,40.0525173900;116.605706071,40.0530638430;116.604159619,40.0529634435;116.602950330,40.0528455615;116.601445836,40.0527032040;116.600562220,40.0521852225;116.599461822,40.0515108975;116.600070213,40.0505423670;116.600741041,40.0494739365;116.601432349,40.0485378735;116.602477303,40.0476262860;116.603370409,40.0471108020;116.604701577,40.0466003130;116.605105672,40.0450878270;116.605281496,40.0439519640;116.605465312,40.0428475695;116.605607170,40.0417761420;116.605134144,40.0404579615;116.604452826,40.0396362840;116.602825954,40.0401872325;116.601792489,40.0405943250;116.600534248,40.0411692495;116.599308975,40.0416612570;116.598313471,40.0420913265;116.596979806,40.0425798375;116.595882405,40.0428845325;116.594355933,40.0433076090;116.593117672,40.0432726440;116.591806984,40.0431682485;116.590591201,40.0434189975;116.576884921,40.0330134135;");
      localUserArea.setAreaName("");
      localUserArea.setGEOX(116.443521D);
      localUserArea.setGEOY(39.921889999999998D);
      localUserArea.setLEFTDOWNX(39.828313000000001D);
      localUserArea.setLEFTDOWNY(116.420889D);
      localUserArea.setRIGHTUPX(40.052847999999997D);
      localUserArea.setRIGHTUPY(116.625252D);
      return localUserArea;
    }
    return this.mServerV2.UserAreas(paramContext, paramString1, paramString2);
  }

  public VisitorvolumeReports VisitorvolumeReport1(Context paramContext, int paramInt, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.VisitorvolumeReport1(paramContext, paramInt, paramString);
  }

  public CommonResult addReply(Context paramContext, String paramString1, int paramInt, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.addReply(paramContext, paramString1, paramInt, paramString2, paramString3, paramString4, paramString5, paramString6, paramString7);
  }

  public CommonResult addUser(Context paramContext, String paramString1, String paramString2, String paramString3, boolean paramBoolean, String paramString4, String paramString5, String paramString6, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.addUser(paramContext, paramString1, paramString2, paramString3, paramBoolean, paramString4, paramString5, paramString6, paramLocation);
  }

  public Building buildingDetail(Context paramContext, String paramString1, String paramString2)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.buildingDetail(paramContext, paramString1, paramString2);
  }

  public Building buildingDetailFullNumber(Context paramContext, String paramString1, String paramString2, int paramInt)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.buildingDetailFullNumber(paramContext, paramString1, paramString2, paramInt);
  }

  public Group<Building> buildings(Context paramContext, int paramInt1, String paramString1, int paramInt2, String paramString2, String paramString3, int paramInt3, int paramInt4, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.buildings(paramContext, paramInt1, paramString1, paramInt2, paramString2, paramString3, paramInt3, paramInt4, paramLocation);
  }

  public BuildingReport buildingsReport(Context paramContext, String paramString1, int paramInt1, int paramInt2, String paramString2, String paramString3)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.buildingsReport(paramContext, paramString1, paramInt1, paramInt2, paramString2, paramString3);
  }

  public CommonResult changePasswd(Context paramContext, String paramString1, String paramString2, String paramString3, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.changePasswd(paramContext, paramString1, paramString2, paramString3, paramLocation);
  }

  public ConstrustionField construstionFieldDetailFullNumber(Context paramContext, String paramString1, String paramString2, int paramInt)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.construstionFieldDetailFullNumber(paramContext, paramString1, paramString2, paramInt);
  }

  public Group<ConstrustionField> construstionfield(Context paramContext, int paramInt1, String paramString1, int paramInt2, String paramString2, String paramString3, int paramInt3, int paramInt4, Location paramLocation, String paramString4, String paramString5)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.construstionfield(paramContext, paramInt1, paramString1, paramInt2, paramString2, paramString3, paramInt3, paramInt4, paramLocation, paramString4, paramString5);
  }

  public CommonResult forgetPassword(Context paramContext, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.forgetPassword(paramContext, paramString);
  }

  public Group<Zone> getAllComm(Context paramContext)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.getAllComm(paramContext);
  }

  public Group<Reply> getCaseReplys(Context paramContext, String paramString, int paramInt)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.getCaseReplys(paramContext, paramString, paramInt);
  }

  public Group<Zone> getZone(Context paramContext, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.getZone(paramContext, paramString);
  }

  public boolean hasLoginAndPassword()
  {
    return this.mServerV2.hasCredentials();
  }

  public User loginUser(Context paramContext, String paramString1, String paramString2, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    this.mServerV2.setCredentials(paramString1, paramString2);
    return this.mServerV2.loginUser(paramContext, paramString1, paramString2, paramLocation);
  }

  public User register(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.register(paramContext, paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramLocation);
  }

  public ServerSettings serverSettings(Context paramContext, Location paramLocation)
    throws ServerException, IOException
  {
    return this.mServerV2.serverSetting(paramContext, paramLocation.geolat, paramLocation.geolong, paramLocation.geohacc, paramLocation.geovacc, paramLocation.geoalt);
  }

  public void setCredentials(String paramString1, String paramString2)
  {
    this.mPhone = paramString1;
    this.mPassword = paramString2;
    this.mServerV2.setCredentials(paramString1, paramString2);
  }

  public CaseNumber userCaseNumber(Context paramContext, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.userCaseNumber(paramContext, paramString);
  }

  public User userDetail(Context paramContext, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.userDetail(paramContext, paramString);
  }

  public CommonResult userUpdate(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, boolean paramBoolean, String paramString7, Location paramLocation)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.userUpdate(paramContext, paramString1, paramString2, paramString3, paramString4, paramString5, paramString6, paramBoolean, paramString7);
  }

  public User userUpdate(String paramString1, String paramString2, String paramString3)
    throws SocketTimeoutException, IOException, ServerParseException
  {
    return this.mServerV2.userUpdate(paramString1, paramString2, paramString3);
  }

  public Group<User> users(Context paramContext, String paramString)
    throws ServerCredentialsException, ServerParseException, ServerException, IOException
  {
    return this.mServerV2.users(paramContext, paramString);
  }

  public static class Location
  {
    String geoalt = null;
    String geohacc = null;
    String geolat = null;
    String geolong = null;
    String geovacc = null;

    public Location()
    {
    }

    public Location(String paramString1, String paramString2)
    {
      this(paramString1, paramString2, null, null, null);
    }

    public Location(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
    {
      this.geolat = paramString1;
      this.geolong = paramString2;
      this.geohacc = paramString3;
      this.geovacc = paramString4;
      this.geoalt = paramString4;
    }
  }
}

/* Location:           /mnt/data/hpc-dev/hou/20131220/同步更新文档说明20131220/classes-dex2jar.jar
 * Qualified Name:     com.cymobile.ymwork.server.Server
 * JD-Core Version:    0.6.0
 */